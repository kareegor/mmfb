version: "3.3"

volumes:
  postgres_data:
      driver: local
services:
  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.file=true"
      - "--providers.docker=true"
      - "--providers.file.watch=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entryPoints.web.forwardedHeaders.insecure"
      - "--entrypoints.websecure.address=:443"
      - "--entryPoints.websecure.forwardedHeaders.insecure"
      - "--entryPoints.web.forwardedHeaders.trustedIPs=127.0.0.1/32"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
            #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.le.acme.email=postmaster@mmfb.com"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443"
      - "80:80"
      - "28080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  postgres:
      image: postgres
      volumes:
        - postgres_data:/var/lib/postgresql/data
      environment:
        POSTGRES_DB: keycloak
        POSTGRES_USER: keycloak
        POSTGRES_PASSWORD: password
  keycloak:
      image: quay.io/keycloak/keycloak:latest
      environment:
        DB_VENDOR: POSTGRES
        DB_ADDR: postgres
        DB_DATABASE: keycloak
        DB_USER: keycloak
        DB_SCHEMA: public
        DB_PASSWORD: password
        KEYCLOAK_USER: admin
        KEYCLOAK_PASSWORD: Pa55w0rd
        PROXY_ADDRESS_FORWARDING: "true"
        # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
        #JDBC_PARAMS: "ssl=true"
      command:
       - "-b 0.0.0.0"
       - "-Dkeycloak.profile.feature.upload_scripts=enabled -Dkeycloak.profile.feature.docker=enabled"
       #- "-Dkeycloak.migration.action=import -Dkeycloak.migration.provider=dir -Dkeycloak.migration.dir=/opt/jboss/keycloak/import-dir -Dkeycloak.migration.strategy=OVERWRITE_EXISTING"
      
      labels:
        traefik.enable: "true"
        traefik.http.routers.auth.rule: Host(`mmfb.com`) && PathPrefix(`/auth`)  
        traefik.http.routers.auth.entrypoints: websecure
        traefik.http.middlewares.authheader.headers.framedeny: "false"
        traefik.http.middlewares.authheader.headers.sslredirect: "true"
        traefik.http.middlewares.authheader.headers.contentsecuritypolicy: upgrade-insecure-requests
        traefik.http.middlewares.authheader.headers.sslproxyheaders.x-forwarded-proto: https  
        traefik.http.routers.auth.tls.certresolver: le
        traefik.http.routers.auth.middlewares: authheader@docker   
      ports:
        - 8080:8080
      depends_on:
        - postgres    
  frontend1:
      image: frontend1:latest
      labels:
        traefik.enable: "true"
        traefik.http.routers.frontend1.rule: Host(`mmfb.com`) && PathPrefix(`/app1`)  
        traefik.http.routers.frontend1.entrypoints: websecure
        traefik.http.middlewares.frontend1.headers.framedeny: "false"
        traefik.http.middlewares.frontend1.headers.sslredirect: "true"
        traefik.http.middlewares.frontend1.headers.contentsecuritypolicy: upgrade-insecure-requests
        traefik.http.middlewares.frontend1.headers.sslproxyheaders.x-forwarded-proto: https  
        traefik.http.routers.frontend1.tls.certresolver: le
        traefik.http.routers.frontend1.middlewares: frontend1@docker  
      ports:
        - 8480:8480
  frontend2:
      image: frontend2:latest
      labels:
        traefik.enable: "true"
        traefik.http.routers.frontend2.rule: Host(`mmfb.com`) && PathPrefix(`/app2`)  
        traefik.http.routers.frontend2.entrypoints: websecure
        traefik.http.middlewares.frontend2.headers.framedeny: "false"
        traefik.http.middlewares.frontend2.headers.sslredirect: "true"
        traefik.http.middlewares.frontend2.headers.contentsecuritypolicy: upgrade-insecure-requests
        traefik.http.middlewares.frontend2.headers.sslproxyheaders.x-forwarded-proto: https  
        traefik.http.routers.frontend2.tls.certresolver: le
        traefik.http.routers.frontend2.middlewares: frontend2@docker  
      ports:
        - 8580:8580  