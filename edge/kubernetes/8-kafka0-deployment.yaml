apiVersion: v1
kind: Service
metadata:
  labels:
    app: zookeeper
  name: zookeeper
  namespace: mmfb
spec:
  ports:
  - name: "2181"
    port: 2181
    targetPort: 2181
  selector:
    app: zookeeper
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka0
  name: kafka0
spec:
  ports:
  - name: "9094"
    port: 9094
    targetPort: 9094
  selector:
    app: kafka0
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
   app: zookeeper
  name: zookeeper
  namespace: mmfb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  strategy: {}
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - image: wurstmeister/zookeeper
        imagePullPolicy: ""
        name: zookeeper
        ports:
        - containerPort: 2181
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
   app: kafka0
  name: kafka0
  namespace: mmfb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka0
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: kafka0
    spec:
      containers:
      - env:
        - name: HOSTNAME_COMMAND
          value: 'docker info | grep ^Name: | cut -d'' '' -f 2'
        - name: KAFKA_ADVERTISED_LISTENERS
          value: INSIDE://:9092,OUTSIDE://kafka0:9094
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: INSIDE
        - name: KAFKA_LISTENERS
          value: INSIDE://:9092,OUTSIDE://:9094
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        image: wurstmeister/kafka:latest
        imagePullPolicy: ""
        name: kafka0
        ports:
        - containerPort: 9094
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
status: {}
