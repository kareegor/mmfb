version: "3.3"

services:
  frontend1:
      image: frontend1:latest 
      extra_hosts:
        - "www.mmfb.com:192.168.0.107" #add hostname to /etc/hosts file of docker
      environment:
        SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI: "https://www.mmfb.com/auth/realms/mmfb"
        SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_JWK_SET_URI: "https://www.mmfb.com/auth/realms/mmfb/protocol/openid-connect/certs"
        SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_REDIRECT_URI: "https://www.mmfb.com/app1/login/oauth2/code/{registrationId}"
        SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID: "apiclient"
        SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET: "7169adfb-36d9-47ad-97c2-0889eb0fafc1"
      labels:
        traefik.enable: "true"
        traefik.http.routers.frontend1.rule: Host(`www.mmfb.com`) && PathPrefix(`/app1`)  
        traefik.http.middlewares.frontend1.headers.framedeny: "false"
        traefik.http.middlewares.frontend1.headers.sslredirect: "true"
        traefik.http.middlewares.frontend1.headers.contentsecuritypolicy: upgrade-insecure-requests
        traefik.http.middlewares.frontend1.headers.sslproxyheaders.x-forwarded-proto: https
        traefik.http.routers.frontend1.tls: "true"    
        traefik.http.routers.frontend1.middlewares: frontend1@docker  
      volumes:
       # Map the certificats into the container
       - ./certs:/etc/certs:ro

  frontend2:
      image: frontend2:latest
      extra_hosts:
        - "www.mmfb.com:192.168.0.107" #add hostname to /etc/hosts file of docker
      environment:
        SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI: "https://www.mmfb.com/auth/realms/mmfb"
        SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_JWK_SET_URI: "https://www.mmfb.com/auth/realms/mmfb/protocol/openid-connect/certs"
        SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_REDIRECT_URI: "https://www.mmfb.com/app2/login/oauth2/code/{registrationId}"
        SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID: "apiclient"
        SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET: "7169adfb-36d9-47ad-97c2-0889eb0fafc1"
      labels:
        traefik.enable: "true"
        traefik.http.routers.frontend2.rule: Host(`www.mmfb.com`) && PathPrefix(`/app2`)  
        traefik.http.middlewares.frontend2.headers.framedeny: "false"
        traefik.http.middlewares.frontend2.headers.sslredirect: "true"
        traefik.http.middlewares.frontend2.headers.contentsecuritypolicy: upgrade-insecure-requests
        traefik.http.middlewares.frontend2.headers.sslproxyheaders.x-forwarded-proto: https
        traefik.http.routers.frontend2.tls: "true"  
        traefik.http.routers.frontend2.middlewares: frontend2@docker  
      volumes:
       # Map the certificats into the container
       - ./certs:/etc/certs:ro  
  frontend3:
      image: frontend3:latest
      extra_hosts:
        - "www.mmfb.com:192.168.0.107" #add hostname to /etc/hosts file of docker
      environment:
        SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI: "https://www.mmfb.com/auth/realms/mmfb"
        SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_JWK_SET_URI: "https://www.mmfb.com/auth/realms/mmfb/protocol/openid-connect/certs"
        SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_REDIRECT_URI: "https://www.mmfb.com/app3/login/oauth2/code/{registrationId}"
        SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID: "apiclient"
        SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET: "7169adfb-36d9-47ad-97c2-0889eb0fafc1"
      labels:
        traefik.enable: "true"
        traefik.http.routers.frontend3.rule: Host(`www.mmfb.com`) && PathPrefix(`/app3`)  
        traefik.http.middlewares.frontend3.headers.framedeny: "false"
        traefik.http.middlewares.frontend3.headers.sslredirect: "true"
        traefik.http.middlewares.frontend3.headers.contentsecuritypolicy: upgrade-insecure-requests
        traefik.http.middlewares.frontend3.headers.sslproxyheaders.x-forwarded-proto: https
        traefik.http.routers.frontend3.tls: "true"  
        traefik.http.routers.frontend3.middlewares: frontend3@docker  
      volumes:
       # Map the certificats into the container
       - ./certs:/etc/certs:ro    
  frontend4:
      image: frontend4:latest
      extra_hosts:
        - "www.mmfb.com:192.168.0.107" #add hostname to /etc/hosts file of docker
      environment:
        SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI: "https://www.mmfb.com/auth/realms/mmfb"
        SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_JWK_SET_URI: "https://www.mmfb.com/auth/realms/mmfb/protocol/openid-connect/certs"
        SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_REDIRECT_URI: "https://www.mmfb.com/app4/login/oauth2/code/{registrationId}"
        SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID: "apiclient"
        SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET: "7169adfb-36d9-47ad-97c2-0889eb0fafc1"
      labels:
        traefik.enable: "true"
        traefik.http.routers.frontend4.rule: Host(`www.mmfb.com`) && PathPrefix(`/app4`)  
        traefik.http.middlewares.frontend4.headers.framedeny: "false"
        traefik.http.middlewares.frontend4.headers.sslredirect: "true"
        traefik.http.middlewares.frontend4.headers.contentsecuritypolicy: upgrade-insecure-requests
        traefik.http.middlewares.frontend4.headers.sslproxyheaders.x-forwarded-proto: https
        traefik.http.routers.frontend4.tls: "true"  
        traefik.http.routers.frontend4.middlewares: frontend4@docker  
      volumes:
       # Map the certificats into the container
       - ./certs:/etc/certs:ro             
networks: 
  edge_default:
      external: true